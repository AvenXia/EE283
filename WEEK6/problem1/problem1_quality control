samtools view -q 30 -b P013_A4_WD_1.sort.bam chrX | samtools sort -O BAM - > ATAC.chrX.bam
samtools index ATAC.chrX.bam

#install.packages("tidyverse")
#install.packages("BiocManager")
#BiocManager::install("ATACseqQC")
#BiocManager::install("DESeq2")
#BiocManager::install("GO.db")

library("ATACseqQC")
library("Rsamtools")
bamfile = "ATAC.chrX.bam"
# BAM file name
bamfile.labels = gsub(".bam", "", basename(bamfile))
# generate fragement size distribution
fragSize = fragSizeDist(bamfile, bamfile.labels)
estimateLibComplexity(readsDupFreq(bamfile, index=bamfile))

## files will be output into outPath
outPath = "splited"
dir.create(outPath)

gal = readBamFile(bamfile, asMates=TRUE, bigFile=TRUE)
# shift the GAlignmentsLists by 5' ends.
# All reads aligning to the positive strand will be offset by +4bp,
# and all reads aligning to the negative strand will be offset -5bp
gal1 = shiftGAlignmentsList(gal)
shiftedBamfile = file.path(outPath, "shifted.bam")
# for reasons that are not clear (to me) BiocIO::export is not loaded above
library(BiocIO)
export(gal1, shiftedBamfile)


## split bam by fragment size (nucleosome free, mono, di-, etc)
library(TxDb.Dmelanogaster.UCSC.dm6.ensGene)
txs = transcripts(TxDb.Dmelanogaster.UCSC.dm6.ensGene)
TSS = promoters(txs, upstream=0, downstream=1)
TSS = unique(TSS)
objs = splitGAlignmentsByCut(gal1, txs = txs, outPath = outPath)
null = writeListOfGAlignments(objs, outPath)
## list the files generated by splitBam.
dir(outPath)

bamfiles = file.path(outPath, c("NucleosomeFree.bam","mononucleosome.bam","dinucleosome.bam","trinucleosome.bam"))
# estimate the library size for normalization
library(ChIPpeakAnno)
librarySize = estLibSize(bamfiles)
# Only consider these chromosomes (pick one for speed/memory)
seqlev = "chrX"
# seqlev = c("chrX","chr2L","chr2R","chr3L","chr3R")
NTILE = 101
dws = ups = 1010
sigs = enrichedFragments(bamfiles, TSS=TSS, librarySize=librarySize, seqlev="chrX", TSS.filter=0.5, n.tile = NTILE, upstream = ups, downstream = dws)

## log2 transformed signals
names(sigs) <- gsub(".bam", "", basename(names(sigs)))
sigs.log2 <- lapply(sigs, function(.ele) log2(.ele+1))
#plot heatmap
featureAlignedHeatmap(sigs.log2, reCenterPeaks(TSS, width=ups+dws), zeroAt=.5, n.tile=NTILE)
